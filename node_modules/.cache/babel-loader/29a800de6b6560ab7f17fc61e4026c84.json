{"ast":null,"code":"var _jsxFileName = \"/Users/amrita/Documents/Learning/post/display-post/src/post/PostDisplay.js\";\nimport React from 'react';\nimport { Row, Col, Container, Card, Breadcrumb } from 'react-bootstrap';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { Link } from \"react-router-dom\"; //import ShowMoreText from 'react-show-more-text';\n\nclass PostDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData();\n      });\n    };\n\n    this.state = {\n      loading: true,\n      offset: 0,\n      perPage: 4,\n      currentPage: 0,\n      postData: []\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  displayCutString(s, n) {\n    var cut = s.indexOf(' ', n);\n    if (cut === -1) return s;\n    return s.substring(0, cut);\n  }\n\n  time_ago(time) {\n    switch (typeof time) {\n      case 'number':\n        break;\n\n      case 'string':\n        time = +new Date(time);\n        break;\n\n      case 'object':\n        if (time.constructor === Date) time = time.getTime();\n        break;\n\n      default:\n        time = +new Date();\n    }\n\n    var time_formats = [[60, 'seconds', 1], // 60\n    [120, '1 minute ago', '1 minute from now'], // 60*2\n    [3600, 'minutes', 60], // 60*60, 60\n    [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n    [86400, 'hours', 3600], // 60*60*24, 60*60\n    [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n    [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n    [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n    [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n    [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n    [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n    [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n    [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n    [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n    [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n    ];\n    var seconds = (+new Date() - time) / 1000,\n        token = 'ago',\n        list_choice = 1;\n\n    if (seconds === 0) {\n      return 'Just now';\n    }\n\n    if (seconds < 0) {\n      seconds = Math.abs(seconds);\n      token = 'from now';\n      list_choice = 2;\n    }\n\n    var i = 0,\n        format;\n\n    while (format = time_formats[i++]) if (seconds < format[0]) {\n      if (typeof format[2] == 'string') return format[list_choice];else return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n    }\n\n    return time;\n  }\n  /* postedDate = Date.parse('2020-09-07T14:37:29+02:00');\n   console.log(time_ago(new Date(Date.parse('2020-09-07T14:37:29+02:00'))));\n  */\n\n\n  removeSpecialChar(data) {\n    data.replace(/(<([^>]+)>)/gi, \"\");\n  }\n\n  receivedData() {\n    axios.get(`https://public-api.wordpress.com/rest/v1/sites/truecaller.blog/posts`).then(res => {\n      const data = res.data.posts;\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n      const postData = slice.map(pd => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 42\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-6 col-lg-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"card-deck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: '30rem',\n          height: '35 rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: pd.featured_image,\n        className: \"card-picture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, pd.title), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, this.displayCutString(pd.content, 150), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"readmore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Link, {\n        to: `/post-detail/${pd.ID}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 46\n        }\n      }, \".... Read More\"))), this.time_ago(new Date(Date.parse(pd.date)))))))));\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage),\n        postData\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.receivedData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, this.state.postData), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, this.state.postData.length > 0 ? /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.handlePageClick,\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }) : null)));\n  }\n\n}\n\nexport default PostDisplay;","map":{"version":3,"sources":["/Users/amrita/Documents/Learning/post/display-post/src/post/PostDisplay.js"],"names":["React","Row","Col","Container","Card","Breadcrumb","axios","ReactPaginate","Link","PostDisplay","Component","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","receivedData","loading","postData","bind","displayCutString","s","n","cut","indexOf","substring","time_ago","time","Date","getTime","time_formats","seconds","token","list_choice","Math","abs","i","format","floor","removeSpecialChar","data","replace","get","then","res","posts","slice","map","pd","width","height","featured_image","title","content","ID","parse","date","pageCount","ceil","length","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Container, Card, Breadcrumb } from 'react-bootstrap';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { Link} from \"react-router-dom\";\n//import ShowMoreText from 'react-show-more-text';\n\n\nclass PostDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      offset: 0,\n      perPage: 4,\n      currentPage: 0,\n      postData: [],\n    };\n    this.handlePageClick = this\n      .handlePageClick\n      .bind(this);\n  }\n  \n  displayCutString(s, n){\n    var cut= s.indexOf(' ', n);\n    if(cut=== -1) return s;\n    return s.substring(0, cut)\n\n  }\n\n  time_ago(time) {\n\n    switch (typeof time) {\n      case 'number':\n        break;\n      case 'string':\n        time = +new Date(time);\n        break;\n      case 'object':\n        if (time.constructor === Date) time = time.getTime();\n        break;\n      default:\n        time = +new Date();\n    }\n    var time_formats = [\n      [60, 'seconds', 1], // 60\n      [120, '1 minute ago', '1 minute from now'], // 60*2\n      [3600, 'minutes', 60], // 60*60, 60\n      [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n      [86400, 'hours', 3600], // 60*60*24, 60*60\n      [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n      [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n      [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n      [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n      [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n      [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n      [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n      [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n      [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n      [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n    ];\n    var seconds = (+new Date() - time) / 1000,\n      token = 'ago',\n      list_choice = 1;\n  \n    if (seconds === 0) {\n      return 'Just now'\n    }\n    if (seconds < 0) {\n      seconds = Math.abs(seconds);\n      token = 'from now';\n      list_choice = 2;\n    }\n    var i = 0,\n      format;\n    while (format = time_formats[i++])\n      if (seconds < format[0]) {\n        if (typeof format[2] == 'string')\n          return format[list_choice];\n        else\n          return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n      }\n    return time;\n  }\n  \n /* postedDate = Date.parse('2020-09-07T14:37:29+02:00');\n  console.log(time_ago(new Date(Date.parse('2020-09-07T14:37:29+02:00'))));\n */\n  removeSpecialChar(data) {\n    data.replace(/(<([^>]+)>)/gi, \"\");\n  }\n  receivedData() {\n    axios\n      .get(`https://public-api.wordpress.com/rest/v1/sites/truecaller.blog/posts`)\n      .then(res => {\n        const data = res.data.posts;    \n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\n        const postData = slice.map(pd => <React.Fragment>\n          <div class=\"col-md-6 col-lg-4\">\n            <Col className=\"card-deck\"><Card style={{ width: '30rem', height: '35 rem' }}>\n              <Card.Img variant=\"top\" src={pd.featured_image} className=\"card-picture\"  />\n              <Card.Body>\n                <Card.Title>\n                  {pd.title}\n                \n                  </Card.Title>\n                <Card.Text>\n                  { this.displayCutString(pd.content,150)}\n                 \n               <span className = \"readmore\"> <Link to={`/post-detail/${pd.ID}`}>.... Read More</Link>\n               </span> \n                </Card.Text>\n              {/*  {time} */}\n               {/*  console.log(time_ago(new Date(Date.parse('2020-09-07T14:37:29+02:00')))); */}\n               {this.time_ago(new Date(Date.parse(pd.date)))}\n              \n               {/*  <Button variant=\"primary\">Click here</Button> */}\n              </Card.Body>\n            </Card></Col>\n          </div>\n\n\n        </React.Fragment>)\n\n        this.setState({\n          pageCount: Math.ceil(data.length / this.state.perPage),\n\n          postData\n        })\n      });\n  }\n  handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState({\n      currentPage: selectedPage,\n      offset: offset\n    }, () => {\n      this.receivedData()\n    });\n\n  };\n\n  componentDidMount() {\n    this.receivedData()\n  }\n  render() {\n\n    return (\n      <div>\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\n\n        </Breadcrumb>\n\n\n        <Container fluid=\"md\">\n          <Row>\n        \n\n          {this.state.postData}\n           \n\n          </Row>\n          <Row>\n            {this.state.postData.length > 0 ? (\n              <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={this.state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"} />\n\n            ) : null\n            }\n\n          </Row>\n\n        </Container>\n\n\n      </div>\n\n    )\n  }\n\n}\nexport default PostDisplay;"]},"metadata":{},"sourceType":"module"}